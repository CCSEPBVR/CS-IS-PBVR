#*****************************************************************************
#  $Id: Makefile.def 1656 2013-11-26 14:03:49Z naohisa.sakamoto@gmail.com $
#*****************************************************************************

#=============================================================================
#  INSTALL DESTINATION.
#=============================================================================
INSTALL_PREFIX := /usr/local


#=============================================================================
#  Suffix rule.
#=============================================================================
.SUFFIXES:


#=============================================================================
#  Phony target.
#=============================================================================
.PHONY: all build lib clean distclean rebuild install uninstall reinstall


#=============================================================================
#  Command macro.
#=============================================================================
ifndef KVS_CPP
  KVS_CPP := g++
endif

ifndef KVS_CC
  KVS_CC := gcc
endif

ifndef KVS_FC
  KVS_FC := gfortran
endif

ifndef KVS_LD
  KVS_LD := $(KVS_CPP)
endif

ifndef KVS_MPI_CPP
  KVS_MPI_CPP := mpicxx
endif

ifndef KVS_MPI_CC
  KVS_MPI_CC := mpicc
endif

ifndef KVS_MPI_FC
  KVS_MPI_FC := mpif90
endif

ifndef KVS_MPI_LD
  KVS_MPI_LD := $(KVS_MPI_CPP)
endif

ifndef KVS_PY
  KVS_PY := python
endif


SHELL  := /bin/bash
CCACHE := $(shell $(SHELL) -c "(type -p ccache; type -p ccache-swig) | head -1")
CPP    := $(CCACHE) $(KVS_CPP)
CC     := $(CCACHE) $(KVS_CC)
FC     := $(CCACHE) $(KVS_FC)
LD     := $(KVS_LD)
MPICPP := $(CCACHE) $(KVS_MPI_CPP)
MPICC  := $(CCACHE) $(KVS_MPI_CC)
MPIFC  := $(CCACHE) $(KVS_MPI_FC)
MPILD  := $(KVS_MPI_LD)
PY     := $(KVS_PY)
PYCONF := $(KVS_PY)-config
AR     := ar -ru
RANLIB := ranlib
MAKE   := make
QMAKE  := qmake

MKDIR := @mkdir -pv
RM    := @rm -fv
RMDIR := @rm -Rfv

INSTALL     := @install -v -m 644
INSTALL_EXE := @install -v -m 755


#=============================================================================
#  all.
#=============================================================================
all: build


#=============================================================================
#  rebuild.
#=============================================================================
rebuild: clean build


#=============================================================================
#  Makefile.
#=============================================================================
MAKEFILE := Makefile


#=============================================================================
#  Library name.
#=============================================================================
LIB_KVSML_CONVERTER := libkvsmlconverter.a


#=============================================================================
#  Solution.
#=============================================================================
ifdef DEBUG
  SOLUTION := Debug
else
  SOLUTION := Release
endif


#=============================================================================
#  Output directory.
#=============================================================================
OUTDIR := $(SOLUTION)


#=============================================================================
#  KVS_INCLUDE_PATH, KVS_LIBRARY_PATH, KVS_LINK_LIBRARY
#=============================================================================
KVS_INCLUDE_PATH :=
KVS_LIBRARY_PATH :=
KVS_LINK_LIBRARY := -lkvsCore


#=============================================================================
#  VTK_INCLUDE_PATH, VTK_LIBRARY_PATH, VTK_LINK_LIBRARY
#=============================================================================
VTK_INCLUDE_PATH :=
VTK_LIBRARY_PATH :=
VTK_LINK_LIBRARY := \
-lvtksys-9.2 \
-lvtkCommonCore-9.2 \
-lvtkCommonExecutionModel-9.2 \
-lvtkCommonDataModel-9.2 \
-lvtkFiltersCore-9.2 \
-lvtkFiltersExtraction-9.2 \
-lvtkFiltersGeometry-9.2 \
-lvtkFiltersParallel-9.2 \
-lvtkIOCore-9.2 \
-lvtkIOGeometry-9.2 \
-lvtkIOCGNSReader-9.2 \
-lvtkIOEnSight-9.2 \
-lvtkIOParallel-9.2 \
-lvtkIOLegacy-9.2 \
-lvtkIOXML-9.2 


#=============================================================================
#  Compiler option.
#=============================================================================
CPPFLAGS := --std=c++17

# For Fujitsu C++ compiler (FCCpx/mpiFCCpx)
ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),FCCpx mpiFCCpx))
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For Intel C++ compiler (icpc/mpiicpc)
else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),icpc mpiicpc))
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For Clang compiler (clang++)
else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),clang++))
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -g
  else
    CPPFLAGS += -O3
  endif

# For g++
else
  CPPFLAGS += -Wall
  ifdef DEBUG
    CPPFLAGS += -O0 -ggdb3
  else
    CPPFLAGS += -O3
  endif
  ifeq "$(shell uname -s)" "Linux"
    CPPFLAGS += -Wno-unused-result
  endif
endif

# OpenMP
ifeq "$(KVS_ENABLE_OPENMP)" "1"
  # For Fujitsu C++ compiler (FCCpx/mpiFCCpx)
  ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),FCCpx mpiFCCpx))
    CPPFLAGS += -Kopenmp
  # For Intel C++ compiler (icpc mpiicpc)
  else ifeq ($(KVS_CPP),$(findstring $(KVS_CPP),icpc mpiicpc))
    CPPFLAGS += -qopenmp
  # For g++
  else
    CPPFLAGS += -fopenmp
  endif
endif


#=============================================================================
#  Definition.
#=============================================================================
DEFINITIONS :=

ifdef DEBUG
  DEFINITIONS += -DDEBUG
else
  DEFINITIONS += -DNDEBUG
endif


#=============================================================================
#  Linker option.
#=============================================================================
LDFLAGS :=
